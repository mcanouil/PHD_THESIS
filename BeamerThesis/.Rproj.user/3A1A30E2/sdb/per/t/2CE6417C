{
    "collab_server" : "",
    "contents" : "# nohup nice -15 R CMD BATCH --vanilla /disks/PROJECT/Mickael/COMMUNICATION/BeamerThesis/images/DataFiguresBlack.R &\n# killJobs --k=\"DataFiguresBlack.R\"\nrm(list = ls())\noptions(stringsAsFactors = FALSE)\n\n# setwd(\"/disks/PROJECT/Mickael/COMMUNICATION/BeamerThesis/images/\")\nsetwd(\"images/\")\n\n# ggsave(file = \"Pictures/.png\", plot = p, width = 7.5, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Pictures/.png\", plot = p, width = 12, height = 6, units = \"in\", dpi = 300)\n\n\n### Define nCores\n    nCores <- min(parallel::detectCores(), ifelse(Sys.info()[\"nodename\"]==\"bigstat1\", 100, 48))\n\n\n### Load packages\n    library(parallel)\n    library(ggplot2)\n    library(grid)\n    library(scales)\n    # options(java.parameters = \"-Xmx100g\")\n    # library(xlsx)\n    library(tidyr)\n    library(dplyr)\n    library(broom)\n    library(cowplot)\n    library(ggrepel)\n    library(viridis)\n    library(ellipse)\n\n    library(myScriptsMickael)\n    library(ggFunctions)\n\n    source(\"theme_black.R\")\n\n\n###\nload(\"DataFiguresBlack1.Rdata\")\nggsave(file = \"Fig01.png\", plot = fig1, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig02.png\", plot = fig2, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig03.png\", plot = fig3, width = 12, height = 6, units = \"in\", dpi = 300)\nfig4 <- fig4 +\n    labs(\n        x = \"Fasting plasma glucose per allele effect (mmol/L)\",\n        y = expression(atop(\"Type 2 diabetes hazard ratio\", paste(\"(fasting plasma glucose \" >= \"7.0mmol/L)\")))\n    )\nggsave(file = \"Fig04.png\", plot = fig4, width = 12, height = 6, units = \"in\", dpi = 300)\n\nggdata <- fig5$data\nggdata[, \"exp.alpha.estimate\"] <- exp(ggdata[, \"alpha.estimate\"])\nggdata.ellipse <- do.call(\"rbind\", lapply(names(tail(sort(table(ggdata[, \"GeneSymbol.Closest\"])), 5)), function (g) {\n    cbind(as.data.frame(with(\n            subset(ggdata, GeneSymbol.Closest==g)[, c(\"gamma.estimate\", \"exp.alpha.estimate\")],\n            ellipse(\n                cor(get(\"gamma.estimate\"), get(\"exp.alpha.estimate\")),\n                scale = c(sd(get(\"gamma.estimate\")), sd(get(\"exp.alpha.estimate\"))),\n                centre = c(mean(get(\"gamma.estimate\")), mean(get(\"exp.alpha.estimate\")))\n            )\n        )),\n        class = g\n    )\n}))\nggdata.ellipse[, \"GeneSymbol.Closest\"] <- ggdata.ellipse[, \"class\"]\nggdata.ellipse <- subset(ggdata.ellipse, GeneSymbol.Closest%in%setdiff(names(which(table(ggdata[, \"GeneSymbol.Closest\"])>2)), \"ARL15\"))\nggdata.ellipse[, \"GeneSymbol.Closest\"] <- factor(ggdata.ellipse[, \"GeneSymbol.Closest\"], levels = sort(unique(ggdata[, \"GeneSymbol.Closest\"])))\nggdata.label <- do.call(\"rbind\", by(ggdata.ellipse, ggdata.ellipse[, \"GeneSymbol.Closest\"], function (idta) {\n    idta[which.max(idta[, \"y\"]), ]\n}))\nfig5 <- ggplot(\n        data = ggdata,\n        aes(x = gamma.estimate, y = exp(alpha.estimate), fill = GeneSymbol.Closest, shape = GeneSymbol.Closest)\n    ) +\n    theme_black(base_size = 14) +\n    geom_hline(yintercept = 1, linetype = 2, colour = \"white\") +\n    geom_vline(xintercept = 0, linetype = 2, colour = \"white\") +\n    geom_path(data = ggdata.ellipse, aes(x = x, y = y, colour = GeneSymbol.Closest), colour = \"white\", size = 1.5, show.legend = FALSE) +\n    geom_path(data = ggdata.ellipse, aes(x = x, y = y, colour = GeneSymbol.Closest), size = 0.75, alpha = 1, show.legend = FALSE) +\n    geom_point(size = 4) +\n    geom_label_repel(data = ggdata.label, aes(x = x, y = y, label = GeneSymbol.Closest), colour = \"white\", nudge_y = 0.075, show.legend = FALSE, min.segment.length = unit(0, \"lines\"))  +\n    scale_colour_viridis(name = \"Gene Symbol\", option = \"viridis\", discrete = TRUE) +\n    scale_fill_viridis(name = \"Gene Symbol\", option = \"viridis\", discrete = TRUE) +\n    scale_shape_manual(name = \"Gene Symbol\", values = rep(c(21, 22, 23, 24, 25), 4)) +\n    scale_y_continuous(breaks = c(0.5, 1, 1.5, 2)) +\n    labs(\n        x = \"Fasting plasma glucose per allele effect (mmol/L)\",\n        y = expression(atop(\"Type 2 diabetes hazard ratio\", paste(\"(fasting plasma glucose \" >= \"7.0mmol/L)\")))\n    )\nggsave(file = \"Fig05.png\", plot = fig5, width = 12, height = 6, units = \"in\", dpi = 300)\nfig6 <- fig6 + labs(\n    x = \"Fasting plasma glucose per allele effect (mmol/L)\",\n    y = expression(atop(\"Type 2 diabetes hazard ratio\", paste(\"(fasting plasma glucose \" >= \"7.0mmol/L)\")))\n)\nggsave(file = \"Fig06.png\", plot = fig6, width = 12, height = 6, units = \"in\", dpi = 300)\nfig7 <- fig7 + labs(\n    x = \"Fasting plasma glucose per allele effect (mmol/L)\",\n    y = expression(atop(\"Type 2 diabetes hazard ratio\", paste(\"(fasting plasma glucose \" >= \"7.0mmol/L)\")))\n)\nggsave(file = \"Fig07.png\", plot = fig7, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig08.png\", plot = fig8, width = 7.5, height = 6, units = \"in\", dpi = 300)\nratio.p <- 9/10\nfig9.p1 <- fig9.p1 + labs(y = bquote(\"RMSE\"==sqrt(symbol(E)((hat(alpha)-alpha)^2))))\nfig9.p2 <- fig9.p2 + labs(y = bquote(\"RMSE\"==sqrt(symbol(E)((hat(alpha)-alpha)^2))))\nfig9 <- ggdraw(plot = ggplot()+theme_black(base_size = 14)+theme(plot.background = element_rect(colour = \"grey20\", fill = \"grey20\")), theme_dark = TRUE) +\n    draw_plot(fig9.p1 + theme(legend.position = \"none\") + theme(\n        axis.line = element_line(colour = \"white\"),\n        strip.background = element_rect(fill = \"grey20\", colour = \"white\")\n    ), x = 0, y = 1-ratio.p, width = 0.575, height = ratio.p) +\n    draw_plot(fig9.p2 + theme(legend.position = \"none\") + theme(\n        axis.line = element_line(colour = \"white\"),\n        strip.background = element_rect(fill = \"grey20\", colour = \"white\")\n    ), x = 0.575, y = 1-ratio.p, width = 0.425, height = ratio.p) +\n    draw_plot(get_legend(fig9.p1 + theme(legend.direction = \"horizontal\")), x = 0, y = 0, width = 1, height = 1-ratio.p) +\n    draw_plot_label(label = c(\"A\", \"B\"), x = c(0, 0.575), y = c(1, 1), colour = \"white\")\nggsave(file = \"Fig09.png\", plot = fig9, width = 12, height = 6, units = \"in\", dpi = 300)\nfig10 <- fig10 +\n    theme(\n        axis.line = element_line(colour = \"white\"),\n        strip.background = element_rect(fill = \"grey20\", colour = \"white\")\n    ) +\n    labs(y = bquote(\"RMSE\"==sqrt(symbol(E)((hat(gamma)-gamma)^2))))\nggsave(file = \"Fig10.png\", plot = fig10, width = 12, height = 6, units = \"in\", dpi = 300)\nfig11 <- fig11 +\n    theme(\n        axis.line = element_line(colour = \"white\"),\n        strip.background = element_rect(fill = \"grey20\", colour = \"white\")\n    ) +\n    labs(y = bquote(\"RMSE\"==sqrt(symbol(E)((hat(beta)-beta)^2))))\nggsave(file = \"Fig11.png\", plot = fig11, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig12.png\", plot = fig12, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig13.png\", plot = fig13, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig14.png\", plot = fig14, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig15.png\", plot = fig17, width = 12, height = 6, units = \"in\", dpi = 300)\n\n\nload(\"DataFiguresBlack2.Rdata\")\n# ggsave(file = \"Fig16.png\", plot = fig1, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig16.png\", plot = fig2, width = 7.5, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig18.png\", plot = fig3, width = 12, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig19.png\", plot = fig4, width = 12, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig20.png\", plot = fig5, width = 12, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig21.png\", plot = fig6, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig17.png\", plot = fig7, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig18.png\", plot = fig8, width = 7.5, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig24.png\", plot = fig9, width = 12, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig25.png\", plot = fig10, width = 12, height = 6, units = \"in\", dpi = 300)\n\nfig11 <- plot_grid(\n    fig7 + coord_cartesian(\n        xlim = range(c(fig7$data[, \"x\"], fig8$data[, \"x\"])),\n        ylim = range(c(fig7$data[, \"y\"], fig8$data[, \"y\"]))\n    ),\n    fig8 + coord_cartesian(\n        xlim = range(c(fig7$data[, \"x\"], fig8$data[, \"x\"])),\n        ylim = range(c(fig7$data[, \"y\"], fig8$data[, \"y\"]))\n    ), ncol = 2, theme_dark = TRUE\n)\nggsave(file = \"Fig19.png\", plot = fig11, width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig20.png\", plot = fig12, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig21.png\", plot = fig13, width = 7.5, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig29.png\", plot = fig14, width = 7.5, height = 6, units = \"in\", dpi = 300)\n# ggsave(file = \"Fig30.png\", plot = fig17, width = 12, height = 6, units = \"in\", dpi = 300)\n\n\n###\nload(file = \"App01.Rdata\")\napp01 <- ggplot(data = blankdta) + theme_black(base_size = 14) +\n    geom_density(aes(x = ODdiff, y = ..scaled..), colour = viridis_pal(begin = 0.25, end = 0.25)(1), fill = viridis_pal(begin = 0.25, end = 0.25)(1), alpha = 0.75) +\n    geom_vline(xintercept = thresholdBlank, linetype = 2, colour = \"firebrick2\") +\n    geom_vline(xintercept = -thresholdBlank, linetype = 2, colour = \"firebrick2\") +\n    geom_text(label = percent(thresholdBlank), x = thresholdBlank, y = 1, colour = \"firebrick2\", hjust = -0.05, vjust = 1, size = 6) +\n    geom_text(label = paste0(\"-\", percent(thresholdBlank)), x = -thresholdBlank, y = 1, colour = \"firebrick2\", hjust = 1.05, vjust = 1, size = 6) +\n    scale_x_continuous(labels = percent, limits = c(-1, 1)) +\n    labs(x = bquote(\"Relative error\"~((OD[2]-OD[1])/OD[1])), y = \"Density\")\nggsave(file = \"Fig22.png\", plot = app01, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\nload(file = \"App02.Rdata\")\napp02 <- ggplot(data = dataset) + theme_black(base_size = 14) +\n    geom_density(aes(x = ODdiff, y = ..scaled..), colour = viridis_pal(begin = 0.25, end = 0.25)(1), fill = viridis_pal(begin = 0.25, end = 0.25)(1), alpha = 0.75) +\n    geom_vline(xintercept = thresholdCell, linetype = 2, colour = \"firebrick2\") +\n    geom_vline(xintercept = -thresholdCell, linetype = 2, colour = \"firebrick2\") +\n    geom_text(label = percent(thresholdCell), x = thresholdCell, y = 1, colour = \"firebrick2\", hjust = -0.05, vjust = 1, size = 6) +\n    geom_text(label = paste0(\"-\", percent(thresholdCell)), x = -thresholdCell, y = 1, colour = \"firebrick2\", hjust = 1.05, vjust = 1, size = 6) +\n    scale_x_continuous(labels = percent, limits = c(-1, 1)) +\n    labs(x = bquote(\"Relative error\"~((OD[2]-OD[1])/OD[1])), y = \"Density\")\nggsave(file = \"Fig23.png\", plot = app02, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\nload(file = \"App03.Rdata\")\nFCthreshold <- 1.2\napp03 <- ggplot(data = subset(foldChangedta, Samples==\"Glc\")) + theme_black(base_size = 14) +\n    geom_density(aes(x = Value, y = ..scaled..), colour = viridis_pal(begin = 0.25, end = 0.25)(1), fill = viridis_pal(begin = 0.25, end = 0.25)(1), alpha = 0.75) +\n    geom_vline(xintercept = FCthreshold, linetype = 2, colour = \"firebrick2\") +\n    geom_text(label = FCthreshold, x = FCthreshold, y = 1, colour = \"firebrick2\", hjust = 1.05, vjust = 1, size = 6) +\n    scale_x_continuous(limits = range(pretty_breaks()(range(foldChangedta[, \"Value\"], na.rm = TRUE)), na.rm = TRUE), breaks = seq(0, 12, 2)) +\n    labs(x = \"Fold Change Insulin Secretion (Glc)\", y = \"Density\")\nggsave(file = \"Fig24.png\", plot = app03, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\nload(file = \"App04.Rdata\")\nwidthbar <- 0.9\napp04 <- ggplot(data =  subset(FullDta, !LowFC), aes(x = Samples, y = Insulin, colour = ExpType, fill = ExpType)) + theme_black(base_size = 14) +\n    geom_boxplot(fill = \"grey20\", outlier.shape = NA) +\n    geom_point(position = position_jitterdodge(jitter.width = widthbar/2), shape = 19) +\n    scale_colour_viridis(\n        name = NULL,\n        discrete = TRUE,\n        begin = 0.25,\n        end = 0.75,\n        labels = function (x) { gsub(\"CT_stat_(..).*_(.*)\", \"\\\\1_\\\\2\", x) }\n    ) +\n    scale_fill_viridis(\n        name = NULL,\n        discrete = TRUE,\n        begin = 0.25,\n        end = 0.75,\n        labels = function (x) { gsub(\"CT_stat_(..).*_(.*)\", \"\\\\1_\\\\2\", x) }\n    ) +\n    scale_x_discrete(labels = function (value) { gsub(\",\", \".\", gsub(\"mM Glc\", \"mM\\nGlc\", gsub(\"_\", \" \", value))) }) +\n    scale_y_continuous(limits = c(0, 20)) +\n    labs(x = \"Stimulus\", y = \"Insulin secretion (% of content)\")  +\n    theme(legend.position = c(0, 0.95), legend.justification = c(-0.05, 1))\nggsave(file = \"Fig25.png\", plot = app04, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\n\nload(file = \"App05.Rdata\")\napp05 <- ggplot() +\n    theme_black(base_size = 14) +\n    geom_errorbar(data = foldChangedtaplot, aes(x = Samples, y = Mean, ymin = Mean*0.95, ymax = Mean+Sd, colour = ExpType, fill = ExpType), width = 0.2, position = position_dodge(widthbar)) +\n    geom_bar(data = foldChangedtaplot, aes(x = Samples, y = Mean, colour = ExpType, fill = ExpType), stat = \"identity\", position = \"dodge\", width = widthbar) +\n    geom_text(\n        data = foldChangedtaplot,\n        aes(x = Samples, y = Mean, label = paste0(\"N=\", N), colour = ExpType, fill = ExpType),\n        position = position_dodge(widthbar),\n        colour = \"white\",\n        hjust = 0.5,\n        vjust = 2,\n        size = 5\n    ) +\n    scale_colour_viridis(name = NULL, discrete = TRUE, begin = 0.25, end = 0.75) +\n    scale_fill_viridis(name = NULL, discrete = TRUE, begin = 0.25, end = 0.75) +\n    geom_errorbarh(data = lmAnnot, aes(x = x, y = y, xmin = xmin, xmax = xmax, colour = ExpType), height = 0) +\n    geom_text(data = lmAnnot, aes(x = x, y = y, xmin = xmin, xmax = xmax, label = labels, colour = ExpType), vjust = -0.25, size = 8) +\n    scale_x_discrete(labels = function (value) {\n        gsub(\",\", \".\",\n            gsub(\"+\", \" + \",\n                gsub(\"mM Glc\", \"mM\\nGlc\",\n                    gsub(\"_\", \" \", value)\n                ),\n                fixed = TRUE\n            )\n        )\n    }) +\n    scale_y_continuous(limits = c(0, 2.5)) +\n    labs(x = \"Stimulus\", y = \"Fold Change\") +\n    theme(legend.position = c(1, 0.775), legend.justification = c(1, 1))\nggsave(file = \"Fig26.png\", plot = app05, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\n\nggsave(file = \"Fig27.png\", plot = plot_grid(app01, app02, ncol = 2, theme_dark = TRUE, labels = c(\"A\", \"B\")), width = 12, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig28.png\", plot = plot_grid(app04+theme(legend.position = \"none\"), app05+theme(legend.position = \"right\", legend.justification = c(0.5, 0.5)), ncol = 2, theme_dark = TRUE, labels = c(\"A\", \"B\")), width = 12, height = 6, units = \"in\", dpi = 300)\n\n\nload(file = \"DataFiguresBlack3.Rdata\")\nggsave(file = \"Fig29.png\", plot = qqp, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig30.png\", plot = mp, width = 7.5, height = 6, units = \"in\", dpi = 300)\nggsave(file = \"Fig31.png\", plot = p, width = 7.5, height = 6, units = \"in\", dpi = 300)\n\n\nsource(\"/disks/OLD/Marie/Documents/Adipotox/Data/Heatmaps_Adipotox/Results_Graphs.R\") # Next => Fig36\n",
    "created" : 1505143446643.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1899925863",
    "id" : "2CE6417C",
    "lastKnownWriteTime" : 1505150940,
    "last_content_update" : 1505150940886,
    "path" : "~/Projects/BeamerThesis/images/DataFiguresBlack.R",
    "project_path" : "images/DataFiguresBlack.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}